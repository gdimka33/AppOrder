import tkinter as tk
from tkinter import ttk
from logger import logger
from БД_соединение import создание_базыданных


# Пример использования:
logger.info('Приложение запущено')
# Инициализация базы данных
создание_базыданных()

class ГлавноеОкно(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Учет личного состава")
        
        # Размер окна
        ширина_окна = 800
        высота_окна = 600
        
        # Центрируем окно на экране
        ширина_экрана = self.winfo_screenwidth()
        высота_экрана = self.winfo_screenheight()
        x = (ширина_экрана - ширина_окна) // 2
        y = (высота_экрана - высота_окна) // 2
        self.geometry(f"{ширина_окна}x{высота_окна}+{x}+{y}")

        # Создаем основной контейнер
        self.главное_меню = ttk.Frame(self)  # Изменено с TkFrame на Frame
        self.главное_меню.pack(fill="both", expand=True, padx=20, pady=20)


        # Фрейм для кнопок
        self.кнопки_главного_меню = ttk.Frame(self.главное_меню)
        self.кнопки_главного_меню.pack()

        # Кнопка Новый приказ (добавляем первой)
        self.кнопка_новый_приказ = ttk.Button(
            self.кнопки_главного_меню,
            text="Новый приказ",
            command=self.показать_новый_приказ
        )
        self.кнопка_новый_приказ.pack(pady=(0, 10))  # Добавляем отступ снизу

        # Кнопка Список офицеров с привязкой к функции
        self.кнопка_список_офицеров = ttk.Button(
            self.кнопки_главного_меню, 
            text="Список офицеров",
            command=self.показать_список_офицеров
        )
        self.кнопка_список_офицеров.pack(pady=2)

        # Кнопка Список курсантов с привязкой к функции
        self.кнопка_список_курсантов = ttk.Button(
            self.кнопки_главного_меню, 
            text="Список курсантов",
            command=self.показать_список_курсантов
        )
        self.кнопка_список_курсантов.pack(pady=2)
        
        # # Создаем фреймы для разных типов сотрудников (изначально скрыты)
        # self.список_курсантов_фрейм = СписокСотрудников(self, "курсант")
        # self.список_офицеров_фрейм = СписокСотрудников(self, "офицер")
        # # Создаем фрейм для нового приказа
        # self.новый_приказ_фрейм = НовыйСуточныйПриказ(self)
        
    def показать_список_курсантов(self):
        logger.info('Открыт список курсантов')
        # Скрываем главное меню
        self.главное_меню.pack_forget()
        # Скрываем список офицеров если он был открыт
        if self.список_офицеров_фрейм.winfo_ismapped():
            self.список_офицеров_фрейм.pack_forget()
        # Показываем фрейм со списком курсантов
        self.список_курсантов_фрейм.показать()

    def показать_список_офицеров(self):
        logger.info('Открыт список офицеров')
        # Скрываем главное меню
        self.главное_меню.pack_forget()
        # Скрываем список курсантов если он был открыт
        if self.список_курсантов_фрейм.winfo_ismapped():
            self.список_курсантов_фрейм.pack_forget()
        # Показываем фрейм со списком офицеров
        self.список_офицеров_фрейм.показать()

    def показать_новый_приказ(self):
        """Показывает фрейм нового приказа"""
        logger.info('Открыт новый суточный приказ')
        # Скрываем главное меню
        self.главное_меню.pack_forget()
        # Скрываем другие фреймы если они открыты
        if self.список_офицеров_фрейм.winfo_ismapped():
            self.список_офицеров_фрейм.pack_forget()
        if self.список_курсантов_фрейм.winfo_ismapped():
            self.список_курсантов_фрейм.pack_forget()
        # Показываем фрейм нового приказа
        self.новый_приказ_фрейм.показать()


if __name__ == "__main__":
    app = ГлавноеОкно()
    app.mainloop()
